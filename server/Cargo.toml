[package]
name = "server"
version = "0.1.0"
edition = "2024"

[dependencies]
argon2 = { version = "0.5.3", features = ["std"] }
async-stripe = { version = "0.41.0", features = ["runtime-tokio-hyper-rustls", "checkout", "webhook-events", "webhook-endpoints"] }
async-trait = "0.1.88"
axum = { version = "0.8.4", features = ["ws", "multipart"] }
axum-extra = { version = "0.10.1", features = ["typed-header"] }
chrono = { version = "0.4.41", features = ["serde"] }
docx-rs = "0.4.17"
dotenvy = "0.15.7"
futures = "0.3.31"
handlebars = "6.3.2"
jsonwebtoken = "9.3.1"
lopdf = "0.36.0"
oauth2 = { version = "5.0.0", features = ["rustls-tls", "reqwest"], default-features = false }
openai-api-rs = "6.0.6"
rand_core = { version = "0.9.3", features = ["std"] }
reqwest = { version = "0.12.20", features = ["json", "rustls-tls"], default-features = false }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
sqlx = { version = "0.8.6", features = ["sqlite", "runtime-tokio-rustls", "macros", "uuid", "chrono", "migrate"] }
thiserror = "2.0.12"
tokio = { version = "1.45.1", features = ["full"] }
tokio-cron-scheduler = "0.14.0"
tokio-stream = "0.1.17"
tower = "0.5.2"
tower-http = { version = "0.6.6", features = ["cors", "fs"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "fmt"] }
urlencoding = "2.1.3"
uuid = { version = "1.17.0", features = ["v4", "serde"] }
validator = { version = "0.20.0", features = ["derive"] }

[dev-dependencies]
tempfile = "3.20.0"

[lints.rust]
# unsafe_code = "forbid"

[lints.clippy]
# Elevate default Clippy warnings to errors.
# This will make sure `cargo clippy` fails on any warnings from these groups.
all = "deny"           # Denies all lints in the default `clippy::all` group (correctness, suspicious, complexity, perf, style).
pedantic = "deny"      # Denies all lints in `clippy::pedantic`. Be prepared for many `#[allow]`s.
unwrap_used = "deny"   # Denies usage of `unwrap()` in any case.
# restriction = "warn" # Denies all lints in `clippy::restriction`. Extremely strict, often requires many `#[allow]`s.
# cargo = "deny"       # Denies lints for `Cargo.toml` improvements.
